{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDragStartInSideChart","index","setState","cacheData","state","asideData","handleDropInRow","e","persist","stopPropagation","handleDropInBroad","keys","layout","length","data","type","children","handleMouseEnter","handleDragOverInBox","n","key","keyList","split","map","item","Number","_data","_cacheData","insertDataInArray","_children","concat","splice","result","findTree","tree","_key","activeKey","mid","_this2","hash","Map","set","react_default","a","createElement","className","draggable","onDragStart","onDragOver","preventDefault","onDrop","renderBox","get","class","id","mark","i","onDragEnter","onDragLeave","onMouseLeave","renderRect","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNAqOeA,qBAhOb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAUFI,2BAA6B,SAAAC,GAC3BR,EAAKS,SAAS,CAAEC,UAAWV,EAAKW,MAAMC,UAAUJ,MAZpCR,EAcda,gBAAkB,SAAAC,GAEhBA,EAAEC,UACFD,EAAEE,mBAjBUhB,EAmBdiB,kBAAoB,SAAAH,GAIlB,GAFAA,EAAEC,UACFD,EAAEE,mBACEf,OAAOiB,KAAKlB,EAAKW,MAAMQ,QAAQC,OAAnC,CAGA,IAAMC,EAAO,CACXC,KAAM,EACNC,SAAU,CAAC,CAAED,KAAM,EAAGC,SAAUvB,EAAKW,MAAMD,aAE7CV,EAAKS,SAAS,CAAEU,OAAQE,MA9BZrB,EAgCdwB,iBAAmB,aAhCLxB,EAmCdyB,oBAAsB,SAACC,EAAGC,EAAKb,GAC7BA,EAAEE,kBAEF,IAAIY,EAAUD,EAAIE,MAAM,KAAKC,IAAI,SAAAC,GAAI,OAAIC,OAAOD,KAC1CE,EAAQjC,EAAKW,MAAMQ,OACnBe,EAAalC,EAAKW,MAAMD,UASxByB,EAAoB,SAACZ,EAAUf,GAEnC,IAAI4B,EAAYb,EAASc,SAqFzB,OApFU,IAANX,GAAiB,IAANA,GACbU,EAAUE,OAAO9B,EAAQ,EAAG,EAAG,CAC7Bc,KAAM,EACNC,SAAUW,IAGJ,IAANR,GAAiB,IAANA,GACbU,EAAUE,OAAO9B,EAAO,EAAG,CACzBc,KAAM,EACNC,SAAUW,IAGJ,IAANR,IACFU,EAAU5B,GAAOc,KAAO,EACxBc,EAAU5B,GAAOe,SAAW,CAC1B,CACED,KAAM,EACNC,SAAU,CACR,CACED,KAAM,EACNC,SAAUW,GAEZ,CACEZ,KAAM,EACNC,SAAUa,EAAU5B,GAAOe,cAM3B,IAANG,IACFU,EAAU5B,GAAOc,KAAO,EACxBc,EAAU5B,GAAOe,SAAW,CAC1B,CACED,KAAM,EACNC,SAAU,CACR,CACED,KAAM,EACNC,SAAUa,EAAU5B,GAAOe,UAE7B,CACED,KAAM,EACNC,SAAUW,OAMV,IAANR,IACFU,EAAU5B,GAAOc,KAAO,EACxBc,EAAU5B,GAAOe,SAAW,CAC1B,CACED,KAAM,EACNC,SAAU,CACR,CACED,KAAM,EACNC,SAAUW,GAEZ,CACEZ,KAAM,EACNC,SAAUa,EAAU5B,GAAOe,cAM3B,IAANG,IACFU,EAAU5B,GAAOc,KAAO,EACxBc,EAAU5B,GAAOe,SAAW,CAC1B,CACED,KAAM,EACNC,SAAU,CACR,CACED,KAAM,EACNC,SAAUW,GAEZ,CACEZ,KAAM,EACNC,SAAUa,EAAU5B,GAAOe,cAM9Ba,GAEHG,EAjGW,SAAXC,EAAYC,EAAMC,GACtB,OAAoB,IAAhBA,EAAKtB,QACPqB,EAAKlB,SAAWY,EAAkBM,EAAKlB,SAAUmB,EAAK,IAC/CD,IAETA,EAAKlB,SAASmB,EAAK,IAAMF,EAASC,EAAKlB,SAASmB,EAAK,IAAKA,EAAKJ,OAAO,IAC/DG,GA2FMD,CAASP,EAAOL,GAE/B5B,EAAKS,SAAS,CACZU,OAAQoB,EACRI,UAAW,MA5Ib3C,EAAKW,MAAQ,CACXQ,OAAQ,GACRT,UAAW,KACXiC,UAAW,GACX/B,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAIkB,IAAI,SAAAC,GAAI,MAAK,CACtEa,IAAKb,MAPG/B,wEAiJL,IAAA6C,EAAA1C,KA2BD2C,GAAO,IAAIC,KACdC,IAAI,EAAG,OACPA,IAAI,EAAG,OACPA,IAAI,EAAG,UAmBV,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACdjD,KAAKQ,MAAMC,UAAUkB,IAAI,SAACC,EAAMvB,GAAP,OACxByC,EAAAC,EAAAC,cAAA,OACEC,UAAU,QACVzB,IAAKI,EAAKa,IACVS,UAAU,OACVC,YAAa,kBAAMT,EAAKtC,2BAA2BC,KAElDuB,EAAKa,QAIZK,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACjBH,EAAAC,EAAAC,cAAA,OACEC,UAAU,QACVG,WAAY,SAAAzC,GAAC,OAAIA,EAAE0C,kBACnBC,OAAQtD,KAAKc,mBAEZhB,OAAOiB,KAAKf,KAAKQ,MAAMQ,QAAQC,OAtCtB,SAAZsC,EAAarC,EAAMM,GACvB,OAAIN,EAAKC,KAEL2B,EAAAC,EAAAC,cAAA,OAAKxB,IAAKA,EAAKyB,UAAWN,EAAKa,IAAItC,EAAKC,OACrCD,EAAKE,SAASO,IAAI,SAACC,EAAMvB,GAAP,OACjBkD,EAAU3B,EAAD,GAAAM,OAAUV,EAAV,KAAAU,OAAiB7B,OAM9ByC,EAAAC,EAAAC,cAAA,OAAKxB,IAAKA,EAAKiC,MAAM,KAAKR,UAAWN,EAAKa,IAAItC,EAAKC,OAzCtC,SAAAK,GAWjB,MAVa,CACX,CAAEkC,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,YAELhC,IAAI,SAACC,EAAMgC,GAAP,OACdd,EAAAC,EAAAC,cAAA,KACExB,IAAKoC,EACLX,UACEP,EAAKlC,MAAMgC,YAAX,GAAAN,OAA4BV,GAA5BU,OAAkCN,EAAK+B,MAAvC,UAAAzB,OACcN,EAAK+B,MADnB,GAAAzB,OAEON,EAAK+B,MAEdL,OAAQ,SAAA3C,GAAC,OAAI+B,EAAKpB,oBAAoBM,EAAK8B,GAAIlC,EAAKb,IACpDkD,YAAa,kBAAMnB,EAAKpC,SAAS,CAAEkC,UAAS,GAAAN,OAAKV,GAALU,OAAWN,EAAK+B,SAC5DG,YAAa,kBAAMpB,EAAKpC,SAAS,CAAEkC,UAAW,MAC9CuB,aAAc,kBAAMrB,EAAKpC,SAAS,CAAEkC,UAAW,UAoB5CwB,CAAWxC,GACXN,EAAKE,SAASqB,KA0BXc,CAAUvD,KAAKQ,MAAMQ,OAAQ,KAC7B,aAzNEiD,cCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1B,EAAAC,EAAAC,cAACyB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.716e249c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './App.less'\n// import _layout from './data'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      layout: {},\n      cacheData: null,\n      activeKey: '',\n      asideData: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14].map(item => ({\n        mid: item\n      }))\n    }\n  }\n  handleDragStartInSideChart = index => {\n    this.setState({ cacheData: this.state.asideData[index] })\n  }\n  handleDropInRow = e => {\n    // To fix Warning: This synthetic event is reused for performance reasons.\n    e.persist()\n    e.stopPropagation()\n  }\n  handleDropInBroad = e => {\n    // To fix Warning: This synthetic event is reused for performance reasons.\n    e.persist()\n    e.stopPropagation()\n    if (Object.keys(this.state.layout).length) {\n      return\n    }\n    const data = {\n      type: 1,\n      children: [{ type: 0, children: this.state.cacheData }]\n    }\n    this.setState({ layout: data })\n  }\n  handleMouseEnter = () => {\n    // console.log('ddd')\n  }\n  handleDragOverInBox = (n, key, e) => {\n    e.stopPropagation()\n    // 缓存好必要的变量\n    let keyList = key.split('-').map(item => Number(item))\n    const _data = this.state.layout\n    const _cacheData = this.state.cacheData\n    const findTree = (tree, _key) => {\n      if (_key.length === 2) {\n        tree.children = insertDataInArray(tree.children, _key[1])\n        return tree\n      }\n      tree.children[_key[1]] = findTree(tree.children[_key[1]], _key.splice(1))\n      return tree\n    }\n    const insertDataInArray = (children, index) => {\n      // 处理数组\n      let _children = children.concat()\n      if (n === 2 || n === 3) {\n        _children.splice(index + 1, 0, {\n          type: 0,\n          children: _cacheData\n        })\n      }\n      if (n === 1 || n === 4) {\n        _children.splice(index, 0, {\n          type: 0,\n          children: _cacheData\n        })\n      }\n      if (n === 5) {\n        _children[index].type = 1\n        _children[index].children = [\n          {\n            type: 1,\n            children: [\n              {\n                type: 0,\n                children: _cacheData\n              },\n              {\n                type: 0,\n                children: _children[index].children\n              }\n            ]\n          }\n        ]\n      }\n      if (n === 6) {\n        _children[index].type = 1\n        _children[index].children = [\n          {\n            type: 1,\n            children: [\n              {\n                type: 0,\n                children: _children[index].children\n              },\n              {\n                type: 0,\n                children: _cacheData\n              }\n            ]\n          }\n        ]\n      }\n      if (n === 7) {\n        _children[index].type = 2\n        _children[index].children = [\n          {\n            type: 2,\n            children: [\n              {\n                type: 0,\n                children: _cacheData\n              },\n              {\n                type: 0,\n                children: _children[index].children\n              }\n            ]\n          }\n        ]\n      }\n      if (n === 8) {\n        _children[index].type = 2\n        _children[index].children = [\n          {\n            type: 2,\n            children: [\n              {\n                type: 0,\n                children: _cacheData\n              },\n              {\n                type: 0,\n                children: _children[index].children\n              }\n            ]\n          }\n        ]\n      }\n      return _children\n    }\n    const result = findTree(_data, keyList)\n    // console.log(result)\n    this.setState({\n      layout: result,\n      activeKey: ''\n    })\n  }\n  render() {\n    const renderRect = key => {\n      const data = [\n        { id: 4, mark: 'left' },\n        { id: 2, mark: 'right' },\n        { id: 1, mark: 'top' },\n        { id: 3, mark: 'bottom' },\n        { id: 5, mark: 'cleft' },\n        { id: 6, mark: 'cright' },\n        { id: 7, mark: 'ctop' },\n        { id: 8, mark: 'cbottom' }\n      ]\n      return data.map((item, i) => (\n        <i\n          key={i}\n          className={\n            this.state.activeKey === `${key}${item.mark}`\n              ? `active ${item.mark}`\n              : `${item.mark}`\n          }\n          onDrop={e => this.handleDragOverInBox(item.id, key, e)}\n          onDragEnter={() => this.setState({ activeKey: `${key}${item.mark}` })}\n          onDragLeave={() => this.setState({ activeKey: '' })}\n          onMouseLeave={() => this.setState({ activeKey: '' })}\n        />\n      ))\n    }\n    const hash = new Map()\n      .set(0, 'box')\n      .set(1, 'row')\n      .set(2, 'column')\n    const renderBox = (data, key) => {\n      if (data.type) {\n        return (\n          <div key={key} className={hash.get(data.type)}>\n            {data.children.map((item, index) =>\n              renderBox(item, `${key}-${index}`)\n            )}\n          </div>\n        )\n      } else {\n        return (\n          <div key={key} class=\"bg\" className={hash.get(data.type)}>\n            {renderRect(key)}\n            {data.children.mid}\n          </div>\n        )\n      }\n    }\n    return (\n      <div className=\"App\">\n        <aside className=\"aside\">\n          {this.state.asideData.map((item, index) => (\n            <div\n              className=\"chart\"\n              key={item.mid}\n              draggable=\"true\"\n              onDragStart={() => this.handleDragStartInSideChart(index)}\n            >\n              {item.mid}\n            </div>\n          ))}\n        </aside>\n        <section className=\"content\">\n          <div\n            className=\"broad\"\n            onDragOver={e => e.preventDefault()}\n            onDrop={this.handleDropInBroad}\n          >\n            {Object.keys(this.state.layout).length\n              ? renderBox(this.state.layout, '0')\n              : ''}\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}